         *= $1000MOVFM    = $BBA2MOVMF    = $BBD4FPOUT    = $AABCFADDT    = $B86AFADD     = $B867FMULT    = $BA28FSUB     = $B850FSUBT    = $B853FDIVT    = $BB12MOVFA    = $BC0FFCOMP    = $BC5BATOFP    = $BC3CFLOAT1   = $B3A2FDIV     = $BB0FLINEPOS  = $FDBLOCKSPERROW = 40ROWCOUNT = 25MAXDEPTH = 32GRAPHBASE = $D000 ; 53248PIXELBASE = $2000 ; 8192COLORBASE = $0400 ; 1024TEMP     = $FB    ; UNUSED ZERO PAGEFA       = 6*16+7FB       = 7*16+4FC       = 2*16+2         LDA #<PIXELBASE         STA LINEPOS         LDA #>PIXELBASE         STA LINEPOS+1         JSR GRAPHON         JSR CLEAR         JSR SCALEDXDY         LDA #ROWCOUNT         STA ROW         JSR RESETCIROWLOOP         LDA #BLOCKSPERROW         STA BLOCK         JSR RESETCRBLOCKLOOP         LDA #8         STA LINELINELOOP         LDA #8         STA LINEBITBITLOOP         JSR RESETD         LDA #MAXDEPTH         STA DEPTH         JSR COMPUTESQFRACLOOP         JSR UPDATEDRDI; ------------- DR*DR+DI*DI>4 ?         JSR SQNORMDR         LDA #<FOUR         LDY #>FOUR         JSR FCOMP         CMP #1         BEQ FRACLOOPEND         DEC DEPTH         BNE FRACLOOPFRACLOOPEND         DEC LINEBIT         LDA DEPTH         LDX LINEBIT         STA LINEBUFFER,X         JSR INCCR         LDA LINEBIT         BNE BITLOOP         JSR STORELINE         JSR DECCR8         JSR INCCI         DEC LINE         BNE LINELOOP         JSR INCCR8         JSR DECCI8         DEC BLOCK         BNE BLOCKLOOP         JSR INCCI8         DEC ROW         BNE ROWLOOP         JSR KEYWAIT         JSR GRAPHOFF         RTS;---------------------------------------STORELINE         LDX #0         LDY #8STORELOOP         LDA LINEBUFFER-1,Y         BEQ NOTHING         LDA (LINEPOS,X)         ASL A         ORA #1         STA (LINEPOS,X)         DEY         BNE STORELOOP         JMP DONENOTHING         LDA (LINEPOS,X)         ASL A         STA (LINEPOS,X)         DEY         BNE STORELOOPDONE         LDA LINEPOS         ADC #1         STA LINEPOS         BCS CARRY         RTSCARRY         INC LINEPOS+1         RTS;---------------------------------------COMPUTESQ         JSR LOADDI         LDA #<DI         LDY #>DI         JSR FMULT         JSR STOREDISQ         JSR LOADDR         LDA #<DR         LDY #>DR         JSR FMULT         JSR STOREDRSQ         RTS;---------------------------------------UPDATEDRDI         JSR LOADDR         JSR STORETMP         JSR LOADDISQ         LDA #<DRSQ         LDY #>DRSQ         JSR FSUB         LDA #<CR         LDY #>CR         JSR FADD         JSR STOREDR         JSR LOADTMP         LDA #<DI         LDY #>DI         JSR FMULT         LDA #<TWO         LDY #>TWO         JSR FMULT         LDA #<CI         LDY #>CI         JSR FADD         JSR STOREDI         RTS;---------------------------------------FMULTT         LDA $66         EOR $6E         STA $6F         LDA $61         JSR $BA2B         RTS;---------------------------------------SCALEDXDY         LDY #BLOCKSPERROW         JSR FLOAT1         JSR MOVFA         LDY #8         JSR FLOAT1         JSR FMULTT         LDA #<DX         LDY #>DX         JSR FDIV         JSR STOREDX         JSR MOVFA         LDY #8         JSR FLOAT1         JSR FMULTT         JSR STOREDX8         LDY #ROWCOUNT         JSR FLOAT1         JSR MOVFA         LDY #8         JSR FLOAT1         JSR FMULTT         LDA #<DY         LDY #>DY         JSR FDIV         JSR STOREDY         JSR MOVFA         LDY #8         JSR FLOAT1         JSR FMULTT         JSR STOREDY8         RTS;---------------------------------------SQNORMDR         JSR COMPUTESQ         JSR LOADDISQ         LDA #<DRSQ         LDY #>DRSQ         JSR FADD         RTS;---------------------------------------LOADTMP         LDA #<TMP         LDY #>TMP         JSR MOVFM         RTS;---------------------------------------STORETMP         LDX #<TMP         LDY #>TMP         JSR MOVMF         RTS;---------------------------------------LOADDI         LDA #<DI         LDY #>DI         JSR MOVFM         RTS;---------------------------------------LOADDR         LDA #<DR         LDY #>DR         JSR MOVFM         RTS;---------------------------------------STOREDR         LDX #<DR         LDY #>DR         JSR MOVMF         RTS;---------------------------------------STOREDI         LDX #<DI         LDY #>DI         JSR MOVMF         RTS;---------------------------------------LOADDRSQ         LDA #<DRSQ         LDY #>DRSQ         JSR MOVFM         RTS;---------------------------------------STOREDRSQ         LDX #<DRSQ         LDY #>DRSQ         JSR MOVMF         RTS;---------------------------------------LOADDISQ         LDA #<DISQ         LDY #>DISQ         JSR MOVFM         RTS;---------------------------------------STOREDISQ         LDX #<DISQ         LDY #>DISQ         JSR MOVMF         RTS;---------------------------------------RESETD         LDA #0         STA DR         STA DR+1         STA DR+2         STA DR+3         STA DR+4         STA DI         STA DI+1         STA DI+2         STA DI+3         STA DI+4         RTS;---------------------------------------RESETCR         LDA SX         STA CR         LDA SX+1         STA CR+1         LDA SX+2         STA CR+2         LDA SX+3         STA CR+3         LDA SX+4         STA CR+4         RTS;---------------------------------------RESETCI         LDA SY         STA CI         LDA SY+1         STA CI+1         LDA SY+2         STA CI+2         LDA SY+3         STA CI+3         LDA SY+4         STA CI+4         RTS;---------------------------------------STOREDX         LDX #<DX         LDY #>DX         JSR MOVMF         RTS;---------------------------------------LOADDX         LDA #<DX         LDY #>DX         JSR MOVFM         RTS;---------------------------------------STOREDY         LDX #<DY         LDY #>DY         JSR MOVMF         RTS;---------------------------------------LOADDY         LDA #<DY         LDY #>DY         JSR MOVFM         RTS;---------------------------------------STOREDX8         LDX #<DX8         LDY #>DX8         JSR MOVMF         RTS;---------------------------------------LOADDX8         LDA #<DX8         LDY #>DX8         JSR MOVFM         RTS;---------------------------------------STOREDY8         LDX #<DY8         LDY #>DY8         JSR MOVMF         RTS;---------------------------------------LOADDY8         LDA #<DY8         LDY #>DY8         JSR MOVFM         RTS;---------------------------------------LOADCR         LDA #<CR         LDY #>CR         JSR MOVFM         RTS;---------------------------------------LOADCI         LDA #<CI         LDY #>CI         JSR MOVFM         RTS;---------------------------------------STORECR         LDX #<CR         LDY #>CR         JSR MOVMF         RTS;---------------------------------------STORECI         LDX #<CI         LDY #>CI         JSR MOVMF         RTS;---------------------------------------INCCR         JSR LOADCR         LDA #<DX         LDY #>DX         JSR FADD         JSR STORECR         RTS;---------------------------------------INCCI         JSR LOADCI         LDA #<DY         LDY #>DY         JSR FADD         JSR STORECI         RTS;---------------------------------------INCCR8         JSR LOADCR         LDA #<DX8         LDY #>DX8         JSR FADD         JSR STORECR         RTS;---------------------------------------INCCI8         JSR LOADCI         LDA #<DY8         LDY #>DY8         JSR FADD         JSR STORECI         RTS;---------------------------------------DECCR8         JSR LOADDX8         LDA #<CR         LDY #>CR         JSR FSUB         JSR STORECR         RTS;---------------------------------------DECCI8         JSR LOADDY8         LDA #<CI         LDY #>CI         JSR FSUB         JSR STORECI         RTS;---------------------------------------GRAPHON  LDA GRAPHBASE+17         ORA #(8+3)*16         STA GRAPHBASE+17         LDA GRAPHBASE+22         AND #255-16         STA GRAPHBASE+22         LDA GRAPHBASE+24         ORA #8         STA GRAPHBASE+24         RTS;---------------------------------------GRAPHOFF LDA GRAPHBASE+17         AND #9*16+15         STA GRAPHBASE+17         LDA GRAPHBASE+24         AND #15*16+7         STA GRAPHBASE+24         RTS;---------------------------------------CLEAR    LDA #<COLORBASE         STA TEMP         LDA #>COLORBASE         STA TEMP+1         LDA #FA         LDX #3       ; 1000/256         LDY #0CLOOP1   STA (TEMP),Y         INY         BNE CLOOP1         INC TEMP+1         DEX         BNE CLOOP1CLOOP2   STA (TEMP),Y         INY         CPY #232     ; 1000%256         BNE CLOOP2;---------------------------------------         LDA #<PIXELBASE         STA TEMP         LDA #>PIXELBASE         STA TEMP+1         LDA #0         LDX #31      ; 8000/256         LDY #0CLOOP3   STA (TEMP),Y         INY         BNE CLOOP3         INC TEMP+1         DEX         BNE CLOOP3CLOOP4   STA (TEMP),Y         INY         CPY #64      ; 8000%256         BNE CLOOP4         RTS;---------------------------------------KEYWAIT  LDA 198         BEQ KEYWAIT         RTS;---------------------------------------DX         .BYTE $82,$33,$33,$33,$33;2.8DY         .BYTE $82,$26,$66,$66,$66;2.6SX         .BYTE $82,$86,$66,$66,$66;-2.1SY         .BYTE $81,$A6,$66,$66,$66;-1.3ZERO         .BYTE $00,$00,$00,$00,$00CR         .BYTE $00,$00,$00,$00,$00CI         .BYTE $00,$00,$00,$00,$00DR         .BYTE $00,$00,$00,$00,$00DI         .BYTE $00,$00,$00,$00,$00DX8         .BYTE $00,$00,$00,$00,$00DY8         .BYTE $00,$00,$00,$00,$00DISQ         .BYTE $00,$00,$00,$00,$00DRSQ         .BYTE $00,$00,$00,$00,$00TMP         .BYTE $00,$00,$00,$00,$00DEPTH         .BYTE $00ROW         .BYTE $00BLOCK         .BYTE $00LINE         .BYTE $00LINEBIT         .BYTE $00FOUR         .BYTE $83,$00,$00,$00,$00TWO         .BYTE $82,$00,$00,$00,$00LINEBUFFER         .BYTE $00,$00,$00,$00         .BYTE $00,$00,$00,$00